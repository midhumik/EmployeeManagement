package com.cognizant.EmployeeManagement.entity;

import java.sql.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.Range;
import org.springframework.format.annotation.DateTimeFormat;



@Entity
@Table(name="employeedetails")
public class Employee {
		
		@Id
		@Column(name="employee_id")
		@NotNull(message="Employee id cannot be null")
		@Range(min=100000,max=999999)
		private int employee_id;
		
		@Column(name="first_name")
		@NotBlank(message="First name cannot be null")
		private String first_name;
		
		@Column(name="last_name")
		@NotBlank(message="Last name cannot be null")
		private String last_name;
		
		@Column(name="gender")
		@NotBlank(message="Gender cannot be null")
		private String gender;
		
		@Column(name="contact_no")
		@NotBlank(message="Contact cannot be null")
		private String contact_no;
		
		@Column(name="email")
		@NotBlank(message="Email cannot be null")
		@Email(regexp = ".+@.+\\..+", message="Please provide a valid email address")
		private String email;
		
		@Column(name="age")
		@Range(min=20)
		@NotNull(message="Age cannot be null")
		private int age;
		
		@Column(name="manager_id")
		@Range(min=100000,max=999999)
		@NotNull(message="Manager ID cannot be null")
		private int manager_id;
		
		@Column(name="business_unit")
		@NotBlank(message="Business unit cannot be null")
		private String business_unit;
		
		@Column(name="job_title")
		@NotBlank(message="Job title cannot be null")
		private String job_title;
		
		@Column(name="salary")
		@NotNull(message="salary cannot be null")
		private double salary;
		
		@Column(name="date_of_joining")
		@NotNull(message = "date cannot be null")
		@DateTimeFormat(pattern = "yyyy-MM-dd")
		private Date date_of_joining;
		
		public Employee() {}
		
		public Employee(int employee_id, String first_name, String last_name, String gender, String contact_no,
				String email, int age, int manager_id, String business_unit, String job_title, double salary,
				Date date_of_joining) {
			
			this.employee_id = employee_id;
			this.first_name = first_name;
			this.last_name = last_name;
			this.gender = gender;
			this.contact_no = contact_no;
			this.email = email;
			this.age = age;
			this.manager_id = manager_id;
			this.business_unit = business_unit;
			this.job_title = job_title;
			this.salary = salary;
			this.date_of_joining = date_of_joining;
		}

		public int getEmployee_id() {
			return employee_id;
		}

		public void setEmployee_id(int employee_id) {
			this.employee_id = employee_id;
		}

		public String getFirst_name() {
			return first_name;
		}

		public void setFirst_name(String first_name) {
			this.first_name = first_name;
		}

		public String getLast_name() {
			return last_name;
		}

		public void setLast_name(String last_name) {
			this.last_name = last_name;
		}

		public String getGender() {
			return gender;
		}

		public void setGender(String gender) {
			this.gender = gender;
		}

		public String getContact_no() {
			return contact_no;
		}

		public void setContact_no(String contact_no) {
			this.contact_no = contact_no;
		}

		public String getEmail() {
			return email;
		}

		public void setEmail(String email) {
			this.email = email;
		}

		public int getAge() {
			return age;
		}

		public void setAge(int age) {
			this.age = age;
		}

		public int getManager_id() {
			return manager_id;
		}

		public void setManager_id(int manager_id) {
			this.manager_id = manager_id;
		}

		public String getBusiness_unit() {
			return business_unit;
		}

		public void setBusiness_unit(String business_unit) {
			this.business_unit = business_unit;
		}

		public String getJob_title() {
			return job_title;
		}

		public void setJob_title(String job_title) {
			this.job_title = job_title;
		}

		public double getSalary() {
			return salary;
		}

		public void setSalary(double salary) {
			this.salary = salary;
		}

		public Date getDate_of_joining() {
			return date_of_joining;
		}

		public void setDate_of_joining(Date date_of_joining) {
			this.date_of_joining = date_of_joining;
		}

		@Override
		public String toString() {
			return "EmployeeDetails [employee_id=" + employee_id + ", first_name=" + first_name + ", last_name="
					+ last_name + ", gender=" + gender + ", contact_no=" + contact_no + ", email=" + email + ", age="
					+ age + ", manager_id=" + manager_id + ", business_unit=" + business_unit + ", job_title="
					+ job_title + ", salary=" + salary + ", date_of_joining=" + date_of_joining + "]";
		}

	
}



-----------------------------------------------
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1" isELIgnored="false"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Employee Form</title>
<style type="text/css">
.error {
	color: red;
}

body {
	background-color: #F3EBF6;
	font-family: 'Ubuntu', sans-serif;
}

table {
	background: white;
	border-radius: 1.5em;
	padding: 55px;
	position: absolute;
	top: 20%;
	left: 32%;
	width: 37%;
}

.button {
	border: none;
	padding: 4px 8px;
	text-align: center;
	text-decoration: none;
	display: inline-block;
	font-size: 16px;
	margin: 15px 15px;
}
</style>

</head>
<body>
	<form:form action="saveEmployee" modelAttribute="employee"
		method="POST">
		<table>
			<tbody>
				<tr>
					<td>Employee Id:</td>
					<td><form:input path="employee_id" /> <form:errors
							path="employee_id" cssClass="error" /></td>
				</tr>
				<tr>
					<td>First Name:</td>
					<td><form:input path="first_name" /> <form:errors
							path="first_name" cssClass="error" /></td>
				</tr>
				<tr>
					<td>Last Name:</td>
					<td><form:input path="last_name" /> <form:errors
							path="last_name" cssClass="error" /></td>
				</tr>

				<tr>
					<td>Gender:</td>
					<td><form:radiobutton path="gender" value="Male" />Male <form:radiobutton
							path="gender" value="Female" />Female <form:radiobutton
							path="gender" value="Other" />Other <form:errors path="gender"
							cssClass="error" /></td>
				</tr>

				<tr>
					<td>Contact No:</td>
					<td><form:input path="contact_no" /> <form:errors
							path="contact_no" cssClass="error" /></td>
				</tr>
				<tr>
					<td>Email:</td>
					<td><form:input path="email" /> <form:errors path="email"
							cssClass="error" /></td>
				</tr>
				<tr>
					<td>Age:</td>
					<td><form:input path="age" /> <form:errors path="age"
							cssClass="error" /></td>
				</tr>
				<tr>
					<td>Manager Id:</td>
					<td><form:input path="manager_id" /> <form:errors
							path="manager_id" cssClass="error" /></td>
				</tr>
				<tr>
					<td>Business Unit:</td>
					<td><form:input path="business_unit" /> <form:errors
							path="business_unit" cssClass="error" /></td>
				</tr>
				<tr>
					<td>Job Title:</td>
					<td><form:input path="job_title" /> <form:errors
							path="job_title" cssClass="error" /></td>
				</tr>
				<tr>
					<td>Salary:</td>
					<td><form:input path="salary" /> <form:errors path="salary"
							cssClass="error" /></td>
				</tr>
				<tr>
					<td>Date of Joining:</td>
					<td><form:input type="date" path="date_of_joining" /> 
					<!--<form:errors path="date_of_joining" cssClass="error"/>--></td>
				</tr>
			</tbody>
		</table>
		<input type="submit" value="add" class="add" />
	</form:form>
</body>
</html>

-------------------------------------------------------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1" isELIgnored="false"%>

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

<!DOCTYPE html>
<html>
<head>
<style>
.add-button {
	border: 1px solid #666; 
	
	padding: 4px; 
	font-size: 12px;
	font-weight: bold;
	width: 120px; 
	padding: 5px 10px; 
	font-family: 'Ubuntu', sans-serif;
	border-radius: 1.5em;
    box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14);
	margin-bottom: 15px;
	background: #d9d3db;
	 cursor: pointer;
        border-radius: 5em;
        color: #fff;
        background: linear-gradient(to right, #9C27B0, #E040FB);
}
.new-button{
border: 1px solid #666; 
	border-radius: 5px; 
	padding: 4px; 
	font-size: 12px;
	font-weight: bold;
	width: 100px; 
	padding: 5px 10px; 
	font-family: 'Ubuntu', sans-serif;
	margin-bottom: 3px;
	background: #F3EBF6;
	 cursor: pointer;
        border-radius: 5em;
        color:black;
        background: linear-gradient(to right, #F3EBF6,  #F3EBF6);
}
table{
	
	border-collapse:collapse;
	
	 
	 border:1px solid #cccac6;
	 font-family: 'Roboto', sans-serif;
	}
th, td {
  padding: 5px;
  border-collapse:collapse;
	
	border:1px solid #cccac6;
}

</style>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body style="  background-color: #F3EBF6;" >
	<div id="wrapper">
		<div id="header">
			<h1 align="center" style="font-family: 'Roboto', sans-serif;
    color: #8C55AA;">EMPLOYEE LIST</h1>
		</div>
	</div>
	<div style="  background-color: #F3EBF6;height:25px;">
	<form method="post" action="search">
	<input type="number" name="id" placeholder="search by employee id"  style="margin-left:767px; border-radius: 20px;
    outline: none;
    box-sizing: border-box;
    border: 2px solid beige;width:200px;height:30px;">
	<button type="submit" class="add-button">Search</button>
	
	<input type="button" value="Add Employee"
		onclick="window.location.href = 'addEmployee'; return false;"
		class="add-button"  />
		<input type="button" value="Logout"
		onclick="window.location.href = 'logout'; return false;"
		class="add-button" />
		</form>
		</div>
	<br>
	<table style=" background-color: #FFFFFF;   
    border-spacing: 10px;
        
        box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14);">
		<tr>
			<td>EMP ID</td>
			<td>FIRST NAME</td>
			<td>LAST NAME</td>
			<td>EMAIL ID</td>
			<td>CONTACT NUMBER</td>
			<td>GENDER</td>
			<td>AGE</td>
			<td>BUSINESS UNIT</td>
			<td>MANAGER ID</td>
			<td>JOB TITLE</td>
			<td>DATE OF JOINING</td>
			<td>SALARY</td>
			<td>ACTION</td>
		</tr>
		<c:forEach var="te" items="${employee}">
			<!-- update link -->
			<c:url var="updateLink" value="/employee/updateEmployee">
				<c:param name="id" value="${te.employee_id}" />
			</c:url>
			<c:url var="deleteLink" value="/employee/deleteEmployee">
				<c:param name="id" value="${te.employee_id}" />
			</c:url>
			<tr>
				<td>${te.employee_id}</td>
				<td>${te.firstName}</td>
				<td>${te.lastName}</td>
				<td>${te.mail_id}</td>
				<td>${te.contact_number}</td>
				<td>${te.gender}</td>
				<td>${te.age}</td>
				<td>${te.bu}</td>
				<td>${te.manager_id}</td>
				<td>${te.title}</td>
				<td>${te.doj}</td>
				<td>${te.salary}</td>
				
				<td><input type="button" value="Update"
		onclick="window.location.href ='${updateLink}'; return false;"
		class="new-button" /><br>
		<input type="button" value="Delete" onclick="window.location.href ='${deleteLink}'; return false;"
		class="new-button" />
			</tr>
		</c:forEach>
	</table>
</body>
</html>